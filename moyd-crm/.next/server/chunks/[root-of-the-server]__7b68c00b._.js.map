{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/moyd-crm/moyd-crm/src/app/api/messages/route.js"],"sourcesContent":["import { NextResponse } from 'next/server'\nimport { createClient } from '@supabase/supabase-js'\n\nexport async function GET(request) {\n  try {\n    const { searchParams } = new URL(request.url)\n    const memberId = searchParams.get('memberId')\n\n    if (!memberId) {\n      return NextResponse.json(\n        { error: 'memberId is required' },\n        { status: 400 }\n      )\n    }\n\n    const supabase = createClient(\n      process.env.NEXT_PUBLIC_SUPABASE_URL,\n      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\n    )\n\n    // Find the conversation for this member\n    const { data: conversation, error: convError } = await supabase\n      .from('conversations')\n      .select('id')\n      .eq('member_id', memberId)\n      .single()\n\n    if (convError || !conversation) {\n      return NextResponse.json({ messages: [] })\n    }\n\n    // Fetch messages for this conversation\n    const { data: messages, error: msgError } = await supabase\n      .from('messages')\n      .select('*')\n      .eq('conversation_id', conversation.id)\n      .order('created_at', { ascending: true })\n\n    if (msgError) {\n      console.error('Error fetching messages:', msgError)\n      return NextResponse.json(\n        { error: 'Failed to fetch messages' },\n        { status: 500 }\n      )\n    }\n\n    return NextResponse.json({ messages: messages || [] })\n  } catch (error) {\n    console.error('Error in messages API:', error)\n    return NextResponse.json(\n      { error: error.message || 'Internal server error' },\n      { status: 500 }\n    )\n  }\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,eAAe,IAAI,OAAO;IAC/B,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;QAC5C,MAAM,WAAW,aAAa,GAAG,CAAC;QAElC,IAAI,CAAC,UAAU;YACb,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAuB,GAChC;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,WAAW,IAAA,yMAAY;QAK7B,wCAAwC;QACxC,MAAM,EAAE,MAAM,YAAY,EAAE,OAAO,SAAS,EAAE,GAAG,MAAM,SACpD,IAAI,CAAC,iBACL,MAAM,CAAC,MACP,EAAE,CAAC,aAAa,UAChB,MAAM;QAET,IAAI,aAAa,CAAC,cAAc;YAC9B,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,UAAU,EAAE;YAAC;QAC1C;QAEA,uCAAuC;QACvC,MAAM,EAAE,MAAM,QAAQ,EAAE,OAAO,QAAQ,EAAE,GAAG,MAAM,SAC/C,IAAI,CAAC,YACL,MAAM,CAAC,KACP,EAAE,CAAC,mBAAmB,aAAa,EAAE,EACrC,KAAK,CAAC,cAAc;YAAE,WAAW;QAAK;QAEzC,IAAI,UAAU;YACZ,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA2B,GACpC;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,UAAU,YAAY,EAAE;QAAC;IACtD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,OAAO,MAAM,OAAO,IAAI;QAAwB,GAClD;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}